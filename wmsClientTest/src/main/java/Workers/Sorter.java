package Workers;

import Area.*;
import Connection.ConnectionToRest;
import java.awt.event.KeyEvent;
import java.io.*;
import java.nio.charset.StandardCharsets;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import org.json.*;

public class Sorter extends javax.swing.JFrame implements PackFunctions{

    ConnectionToRest connection;
    private String[] products;
    public Sorter() throws IOException, JSONException {
        initComponents();
        getProductsToSorter();
        getArea();
        jRadioButton2.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        workArea = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        FirstPlace = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Row = new javax.swing.JComboBox<>();
        Place = new javax.swing.JComboBox<>();
        Level = new javax.swing.JComboBox<>();
        ProductsBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CustomCount = new javax.swing.JTextField();
        addProduct = new javax.swing.JButton();
        Ostatok = new javax.swing.JLabel();
        AllCheckBox = new javax.swing.JCheckBox();
        ShowArea = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        getAllProducts = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        idProductToReturn = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        PlaceOfExtense = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        countProductToReturn = new javax.swing.JTextField();
        addProductToReturn = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 6));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setPreferredSize(new java.awt.Dimension(400, 5));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        workArea.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        workArea.setText("Рабочая область Комплектовщика: ");

        jLabel2.setText("Первое свободное место:");

        FirstPlace.setEnabled(false);

        jLabel3.setText("Добавить товар в ячейку:");

        Row.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ряд 1", "Ряд 2", "Ряд 3", "Ряд 4", "Ряд 5", "Ряд 6", "Ряд 7", "Ряд 8", "Ряд 9", "Ряд 10", "Ряд 11", "Ряд 12", "Ряд 13", "Ряд 14", "Ряд 15", "Ряд 16", "Ряд 17", "Ряд 18", "Ряд 19", "Ряд 20", " " }));
        Row.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RowActionPerformed(evt);
            }
        });

        Place.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Место 1", "Место 2", "Место 3", "Место 4", "Место 5", "Место 6", "Место 7", "Место 8", "Место 9", "Место 10", "Место 11", "Место 12", "Место 13", "Место 14", "Место 15", "Место 16", "Место 17", "Место 18", "Место 19", "Место 20", "Место 21", "Место 22", "Место 23", "Место 24", "Место 25", "Место 26", "Место 27", "Место 28", "Место 29", "Место 30", "Место 31", "Место 32", "Место 33", "Место 34", "Место 35", "Место 36", "Место 37", "Место 38", "Место 39", "Место 40", "Место 41", "Место 42", "Место 43", "Место 44", "Место 45", "Место 46", "Место 47", "Место 48", "Место 49", "Место 50" }));

        Level.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Уровень 1", "Уровень 2", "Уровень 3" }));

        jLabel4.setText("Разгруженный товар:");

        jLabel5.setText("Количество:");

        CustomCount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CustomCountKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CustomCountKeyTyped(evt);
            }
        });

        addProduct.setBackground(new java.awt.Color(0, 153, 51));
        addProduct.setText("Добавить");
        addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductActionPerformed(evt);
            }
        });

        Ostatok.setText("Остаток: 0");
        Ostatok.setEnabled(false);

        AllCheckBox.setText("Всё");

        ShowArea.setBackground(new java.awt.Color(102, 153, 255));
        ShowArea.setText("Занятость склада");
        ShowArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowAreaActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Sizon\\wmsClientTest\\Background.gif")); // NOI18N

        getAllProducts.setText("Просмотр всей продукции");
        getAllProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getAllProductsActionPerformed(evt);
            }
        });

        jLabel6.setText("Номер товара:");

        idProductToReturn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idProductToReturnKeyTyped(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Списание:");

        PlaceOfExtense.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Зона разгрузки: №1", "Зона разгрузки: №2", "Зона разгрузки: №3", "Зона разгрузки: №4", "Зона разгрузки: №5", "Зона разгрузки: №6", "Зона разгрузки: №7", "Зона разгрузки: №8" }));

        jLabel8.setText("Место разгрузки:");

        jLabel9.setText("Количество:");

        countProductToReturn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                countProductToReturnKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                countProductToReturnKeyTyped(evt);
            }
        });

        addProductToReturn.setBackground(new java.awt.Color(255, 51, 51));
        addProductToReturn.setText("Списать");
        addProductToReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductToReturnActionPerformed(evt);
            }
        });

        jRadioButton1.setBackground(new java.awt.Color(255, 0, 0));
        jRadioButton1.setForeground(new java.awt.Color(255, 0, 51));
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(0, 153, 0));
        jRadioButton2.setForeground(new java.awt.Color(0, 153, 51));
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel18.setText("Обновить");
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Ostatok))
                            .addComponent(ProductsBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CustomCount, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AllCheckBox))
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(FirstPlace, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(Row, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Place, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Level, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(getAllProducts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(ShowArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel9))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(countProductToReturn)
                                            .addComponent(idProductToReturn, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(PlaceOfExtense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(addProductToReturn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workArea, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton1))))
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(workArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(8, 8, 8))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ShowArea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(3, 3, 3)
                .addComponent(ProductsBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(FirstPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(getAllProducts))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Row, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Place, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Level, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(CustomCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addProduct)
                    .addComponent(AllCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Ostatok)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(idProductToReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PlaceOfExtense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(countProductToReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addProductToReturn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RowActionPerformed

    private void ShowAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAreaActionPerformed
        try {
            SchemeOfArea area = new SchemeOfArea();
            area.setVisible(true);
        } catch (JSONException ex) {
            //Logger.getLogger(Sorter.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            //Logger.getLogger(Sorter.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ShowAreaActionPerformed

    private void getAllProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getAllProductsActionPerformed
        TableProducts area = new TableProducts();
        area.setVisible(true);
    }//GEN-LAST:event_getAllProductsActionPerformed

    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
        connection = new ConnectionToRest(); 
        String products[] = (ProductsBox.getSelectedItem().toString()).split(Pattern.quote(".")); //0
        String rows[] = (Row.getSelectedItem().toString()).split(" "); //1
        String places[] = (Place.getSelectedItem().toString()).split(" "); //1
        String levels[] = (Level.getSelectedItem().toString()).split(" "); //1
        
        String count[] = new String[10];
        String countEnd = "0";
        if(AllCheckBox.isSelected())
        {
            count = (ProductsBox.getSelectedItem().toString()).split(" "); //2
            countEnd = count[2];
            System.out.println("CHECK-TRUE");
        }
        else
            if(!CustomCount.getText().equals(""))
            {
                countEnd = CustomCount.getText();
                System.out.println("FIELD-TRUE");
            }
        if(!countEnd.equals("0")) 
        {
            String dataCount=CustomCount.getText().trim();
            if((AllCheckBox.isSelected() && !dataCount.equals(""))||(!AllCheckBox.isSelected() && dataCount.equals("")))
                JOptionPane.showMessageDialog(null, "Неверно введено количество товара!", "Уведомление",   JOptionPane.INFORMATION_MESSAGE);
            else
            {
                try 
                {
                    System.out.println("cc: "+count[9]);
                    String input = "{\"Id\":\""+products[0]+"\",\"Row\":\""+rows[1]+"\",\"Place\":\""+places[1]+"\","
                            + "\"Level\":\""+levels[1]+"\",\"Count\":\""+countEnd+"\",\"Invoice\":\""+count[9]+"\"}";

                    OutputStream os = connection.postArea().getOutputStream();
                    System.out.println(input);
                    os.write(input.getBytes());
                    os.flush();
                    os.close();
                    BufferedReader in = new BufferedReader(new InputStreamReader(connection.getConnection().getInputStream()));
                    while (in.readLine() != null) {}
                    System.out.println("\nCrunchify REST Service Invoked Successfully..");
                    in.close();
                    int selectedIndex = ProductsBox.getSelectedIndex();
                    if (selectedIndex != -1) {
                        ProductsBox.removeItemAt(selectedIndex);
                    }
                    
                    
                    count = (workArea.getText().split(" "));
                    String cc[] = count[3].split(Pattern.quote("."));
                    String s = "{\"idWorker\":\""+cc[0]+"\",\"typeOfOperation\":\""+"Загрузка"+"\",\"idProduct\":\""+products[0]+"\","
                            + "\"countOfProduct\":\""+countEnd+"\"}";
                    postOperation(s); // ДОБАВЛЕНИЕ ОПЕРАЦИИ В КОПИЛКУ КОМПЛЕКТОВЩИКА
                    JOptionPane.showMessageDialog(null, "Товар успешно транспортирован!", "Уведомление",   JOptionPane.INFORMATION_MESSAGE);
                    connection.getConnection().disconnect();
                } catch (IOException ex) {
                    //Logger.getLogger(Sorter.class.getName()).log(Level.SEVERE, null, ex);
                }    
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Неверно введено количество товара!", "Уведомление",   JOptionPane.INFORMATION_MESSAGE);
                
    }//GEN-LAST:event_addProductActionPerformed

    private void addProductToReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductToReturnActionPerformed
        connection = new ConnectionToRest(); 
        
        String id[] = (workArea.getText().split(" "));
        String idWorker[] = id[3].split(Pattern.quote(".")); // idWorker[0] - idWorker
        
        String idProduct = idProductToReturn.getValue().toString(); // idProduct
        String countProduct = countProductToReturn.getText(); //countProduct        
        try 
        {
            String input = "{\"idWorker\":\""+idWorker[0]+"\",\"idProduct\":\""+idProduct+"\",\"countProduct\":\""+countProduct+"\",\"placeOfExtense\":\""+PlaceOfExtense.getSelectedItem().toString()+"\"}";
            OutputStream os = connection.postOperationToReturn().getOutputStream();
            System.out.println(input);
            os.write(input.getBytes());
            os.flush();
            os.close();
            BufferedReader in = new BufferedReader(new InputStreamReader(connection.getConnection().getInputStream()));
            String output = in.readLine();             
            connection.getConnection().disconnect(); 
            System.out.println("\nCrunchify REST Service Invoked Successfully..");
            in.close();
            if(output.length()!=2)
            {
                JSONArray obj = new JSONArray(output);
                String outputForPane = "Комплектовщику №"+idWorker[0]+" необходимо выгрузить товар на: "+PlaceOfExtense.getSelectedItem().toString();
                for(int i = 0; i<obj.length(); i++)
                {
                    JSONObject first = obj.getJSONObject(i);
                    outputForPane += "\nРяд: " + first.getString("Row") +"  Место: "+ first.getString("Place") + "  Уровень: "+ 
                            first.getString("Level") + "  Количество: " + first.getString("CountProduct");       
                }
                JOptionPane.showMessageDialog(null, outputForPane);  
            }
            else  
                JOptionPane.showMessageDialog(null, "Товар/Количество не верны!", "Уведомление",   JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
                //Logger.getLogger(Sorter.class.getName()).log(Level.SEVERE, null, ex);
            } catch (JSONException ex) {
            //Logger.getLogger(Sorter.class.getName()).log(Level.SEVERE, null, ex);
        }
                    
    }//GEN-LAST:event_addProductToReturnActionPerformed

    private void countProductToReturnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_countProductToReturnKeyPressed
        
    }//GEN-LAST:event_countProductToReturnKeyPressed

    private void CustomCountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustomCountKeyPressed
        
    }//GEN-LAST:event_CustomCountKeyPressed

    private void CustomCountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustomCountKeyTyped
       char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))
            evt.consume();
    }//GEN-LAST:event_CustomCountKeyTyped

    private void countProductToReturnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_countProductToReturnKeyTyped
       char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))
            evt.consume();
    }//GEN-LAST:event_countProductToReturnKeyTyped

    private void idProductToReturnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idProductToReturnKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))
            evt.consume();
    }//GEN-LAST:event_idProductToReturnKeyTyped

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        jLabel6.setEnabled(false);
        jLabel9.setEnabled(false);
        jLabel8.setEnabled(false);
        idProductToReturn.setEnabled(false);
        countProductToReturn.setEnabled(false);
        PlaceOfExtense.setEnabled(false);
        addProductToReturn.setEnabled(false);
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(true);
        
        jLabel4.setEnabled(true);
        ProductsBox.setEnabled(true);
        jLabel2.setEnabled(true);
        FirstPlace.setEnabled(true);
        jLabel3.setEnabled(true);
        Row.setEnabled(true);
        Place.setEnabled(true);
        Level.setEnabled(true);
        jLabel5.setEnabled(true);
        CustomCount.setEnabled(true);
        AllCheckBox.setEnabled(true);
        addProduct.setEnabled(true);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        jLabel6.setEnabled(true);
        jLabel9.setEnabled(true);
        jLabel8.setEnabled(true);
        idProductToReturn.setEnabled(true);
        countProductToReturn.setEnabled(true);
        PlaceOfExtense.setEnabled(true);
        addProductToReturn.setEnabled(true);
        jRadioButton2.setSelected(false);
        jRadioButton1.setSelected(true);
        
        jLabel4.setEnabled(false);
        ProductsBox.setEnabled(false);
        jLabel2.setEnabled(false);
        FirstPlace.setEnabled(false);
        jLabel3.setEnabled(false);
        Row.setEnabled(false);
        Place.setEnabled(false);
        Level.setEnabled(false);
        jLabel5.setEnabled(false);
        CustomCount.setEnabled(false);
        AllCheckBox.setEnabled(false);
        addProduct.setEnabled(false);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        try {
            Sorter obj = new Sorter();
            obj.setVisible(true);
            obj.setWorkerInfo(workArea.getText());
            this.dispose();
            JOptionPane.showMessageDialog(null, "Обновлено!", "Уведомление",   JOptionPane.INFORMATION_MESSAGE);
        } catch (JSONException ex) {
            //Logger.getLogger(Stockman.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            //Logger.getLogger(Stockman.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel18MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sorter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sorter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sorter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sorter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    try {
                        new Sorter().setVisible(true);
                    } catch (JSONException ex) {
                        //Logger.getLogger(Sorter.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (IOException ex) {
                    //Logger.getLogger(Sorter.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AllCheckBox;
    private javax.swing.JTextField CustomCount;
    private javax.swing.JTextField FirstPlace;
    private javax.swing.JComboBox<String> Level;
    private javax.swing.JLabel Ostatok;
    private javax.swing.JComboBox<String> Place;
    private javax.swing.JComboBox<String> PlaceOfExtense;
    private javax.swing.JComboBox<String> ProductsBox;
    private javax.swing.JComboBox<String> Row;
    private javax.swing.JButton ShowArea;
    private javax.swing.JButton addProduct;
    private javax.swing.JButton addProductToReturn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField countProductToReturn;
    private javax.swing.JButton getAllProducts;
    private javax.swing.JSpinner idProductToReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel workArea;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setWorkerInfo(int id, String firstname, String lastname) {
        workArea.setText(workArea.getText() + id + ". " + firstname + " " + lastname);
    }
    
    public void setWorkerInfo(String s) {
        workArea.setText(s);
    }

    private void getProductsToSorter() throws JSONException, IOException {
        connection = new ConnectionToRest();
        BufferedReader br = new BufferedReader(new InputStreamReader(
                (connection.getProductsToSorter().getInputStream()), StandardCharsets.UTF_8));
        String output = br.readLine();             
        connection.getConnection().disconnect();
        JSONArray obj = new JSONArray(output);
        for(int i=0; i<obj.length();i++)
        {
            JSONObject first = obj.getJSONObject(i);
            ProductsBox.addItem(first.getString("idProduct") + ". Количество: " + first.getString("countProduct") + " <" + first.getString("placeArrival") + "> | " + "№ Накладной: "+first.getString("Invoice"));
        }
    }
    
     private void fillArea(JSONArray obj) throws JSONException {

        String[] rows = new String[obj.length()];
        String[] places = new String[obj.length()];
        for(int i=0; i<obj.length();i++)
        {
            JSONObject first = obj.getJSONObject(i);
            rows[i] = first.getString("Row");
            places[i] = first.getString("Place");
        }
        int flag;
        for(int j=1; j<20;j++)
            for(int i=1; i<50;i++)
            {
                flag = 0;
                for(int k=0; k<rows.length;k++)
                {
                    if(j==Integer.parseInt(rows[k]) && i==Integer.parseInt(places[k])){
                        flag=1;
                    }
                }
                if(flag==0)
                {
                    FirstPlace.setText("Ряд: " + j + " Место: " + i);
                    return;
                }
            }
    }   
    
    private void getArea() throws JSONException, IOException {
        connection = new ConnectionToRest();	
        System.out.println("\n\nOPAOPA\n ");
        BufferedReader br = new BufferedReader(new InputStreamReader(
                (connection.getArea().getInputStream()), StandardCharsets.UTF_8));
        String output = br.readLine(); 
        System.out.println("\n\nOPAOPA\n ");
        connection.getConnection().disconnect(); 
        System.out.println("\n\nOPAOPA\n ");
        System.out.println(output);
        JSONArray obj = new JSONArray(output);
        fillArea(obj);
    }
    private void postOperation(String s) throws IOException
    {
        connection = new ConnectionToRest(); 
        OutputStream os = connection.postSorterOperation().getOutputStream();
        System.out.println(s);
        os.write(s.getBytes());
        os.flush();
        os.close();
        BufferedReader in = new BufferedReader(new InputStreamReader(connection.getConnection().getInputStream()));
        while (in.readLine() != null) {}
        System.out.println("\nCrunchify REST Service Invoked Successfully..");
        in.close();
        connection.getConnection().disconnect();
    }
}
